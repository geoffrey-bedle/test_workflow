name: dev deployment
on:
  push:
    branches:
      - dev

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          # Créer le dossier .ssh si ce n'est pas déjà fait
          mkdir -p ~/.ssh
          # Ajouter la clé privée
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          # Définir les permissions de la clé
          chmod 600 ~/.ssh/id_rsa
          # (Optionnel) Ajouter l'hôte au known_hosts
          # ssh-keyscan -H your-server.com >> ~/.ssh/known_hosts

      - name: Set up SSH
        run: echo SSH connection from ${{ vars.ENV_NAME }} branch !

      - name: Connect to Server and Run Commands
        run: |
          REPO_NAME=${{ github.event.repository.name }}  # Récupération dynamique du nom du dépôt

          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_DOMAIN }} "
            echo \"\$(date) : Connected successfully !\" >> workflow.txt;

            # Définir le répertoire du dépôt
            REPO_DIR=\"\$HOME/\$REPO_NAME\"

            # Si le répertoire n'existe pas, on clone le dépôt
            if [ ! -d \"\$REPO_DIR\" ]; then
              echo \"Cloning repository for the first time...\";
              git clone git@github.com:geoffrey-bedle/\$REPO_NAME \$REPO_DIR;
            else
              # Sinon, on fait un pull pour mettre à jour le dépôt
              echo \"Repository exists. Pulling latest changes...\";
              cd \$REPO_DIR && pwd && git pull origin dev;
            fi
          "

  
